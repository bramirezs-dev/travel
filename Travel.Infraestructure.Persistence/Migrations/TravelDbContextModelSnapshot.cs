// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Infraestructure.Persistence.Contexts;

namespace Travel.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    partial class TravelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nombre");

                    b.Property<string>("SureName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("apellidos");

                    b.HasKey("Id");

                    b.ToTable("autores");
                });

            modelBuilder.Entity("Travel.Domain.Entities.AuthorHasBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("BookISBNId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookISBNId");

                    b.ToTable("autores_has_libros");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Book", b =>
                {
                    b.Property<int>("ISBNId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(13)
                        .HasColumnType("int")
                        .HasColumnName("ISBN")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EditorialId")
                        .HasColumnType("int");

                    b.Property<string>("NumberPages")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("n_paginas");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sinopsis");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("titulo");

                    b.HasKey("ISBNId");

                    b.HasIndex("EditorialId");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Headquarters")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("sede");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("editoriales");
                });

            modelBuilder.Entity("Travel.Domain.Entities.AuthorHasBook", b =>
                {
                    b.HasOne("Travel.Domain.Entities.Author", "Author")
                        .WithMany("AuthorHasBooks")
                        .HasForeignKey("AuthorId");

                    b.HasOne("Travel.Domain.Entities.Book", "Book")
                        .WithMany("AuthorHasBooks")
                        .HasForeignKey("BookISBNId");

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Book", b =>
                {
                    b.HasOne("Travel.Domain.Entities.Editorial", "Editorial")
                        .WithMany("Books")
                        .HasForeignKey("EditorialId");

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Author", b =>
                {
                    b.Navigation("AuthorHasBooks");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Book", b =>
                {
                    b.Navigation("AuthorHasBooks");
                });

            modelBuilder.Entity("Travel.Domain.Entities.Editorial", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
